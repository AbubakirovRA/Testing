// Задание №4
// Разработайте модульный тест для проверки, что при добавлении определенного количества
// товара в корзину, общее количество этого товара в магазине соответствующим образом
// уменьшается.

// Ожидаемый результат: Количество товара в магазине
// уменьшается на число продуктов в корзине пользователя

// Модульный тест проверяет, что при добавлении определенного количества товара в корзину, 
// общее количество этого товара в магазине уменьшается.
// фреймворк тестирования JUnit. 
// Создаем объекты корзины и магазина, добавляем в корзину определенное количество продуктов,
 затем проверяем, что количество продукта в магазине уменьшилось на соответствующее количество


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class CartTest {

    @Test
    public void testDecreaseProductQuantityInShopAfterAddingToCart() {
        // Создаем объект магазина
        Shop shop = new Shop();

        // Создаем продукт
        Product product = new Product(1, "Product 1", 10.0, 5); // Начальное количество в магазине: 5 шт.

        // Добавляем продукт в магазин
        shop.addProduct(product);

        // Создаем объект корзины
        Cart cart = new Cart();

        // Добавляем продукт в корзину, например, 3 шт.
        cart.addProductToCart(product, 3);

        // Получаем ожидаемое количество продукта в магазине после добавления в корзину
        int expectedQuantityInShop = 5 - 3; // Новое количество в магазине

        // Получаем фактическое количество продукта в магазине
        int actualQuantityInShop = shop.getProductQuantity(product);

        // Проверяем, что фактическое и ожидаемое количество совпадают
        assertEquals(expectedQuantityInShop, actualQuantityInShop);
    }
}

// Тест создает объект магазина и продукта, добавляет продукт в магазин, 
// затем создает объект корзины и добавляет продукт в корзину с определенным количеством. 
// После этого он проверяет, что количество продукта в магазине уменьшилось на соответствующее количество.

// нужно создать класс Shop с методами addProduct и getProductQuantity